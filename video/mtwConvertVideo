#!/usr/bin/php
<?php
/**
 * @version		    $Id: 
 * @package		    mtwScripts
 * @subpackage	  mtwScripts
 * @copyright			CopyRight 2011 Matware All rights reserved.
 * @author				Matias Aguirre
 * @email   			maguirre@matware.com.ar
 * @link					http://www.matware.com.ar/
 * @license				GNU/GPL http://www.gnu.org/licenses/gpl-3.0-standalone.html
 */
define( '_JEXEC', 1 );
define('JPATH_BASE', dirname(__FILE__));
require_once ( '../libraries/import.php' );
jimport( 'joomla.application.cli' );

class ConvertVideo extends JCli
{

	/**
	* A database object for the application to use.
	*
	* @var JDatabase
	* @since 11.3
	*/
	protected $dbo = null;

	/**
	* Class constructor.
	*
	* This constructor invokes the parent JCli class constructor,
	* and then creates a connector to the database so that it is
	* always available to the application when needed.
	*
	* @return void
	*
	* @since 11.3
	* @throws JDatabaseException
	*/
	public function __construct()
	{
		// Call the parent __construct method so it bootstraps the application class.
		parent::__construct();

		jimport('joomla.database.database');
		jimport('joomla.filesystem.file');
		jimport('joomla.filesystem.folder');

		
		$config = 			array(
				'driver' => 'mysqli',
				'host' => 'localhost',
				'user' => 'convertvideo',
				'password' => 'convertvideo12',
				'database' => 'convertvideo',
				'prefix' => 'mtw_',
			);
		$this->dbo = JDatabase::getInstance($config);
		
	}

  public function execute()
  {
/*
		$this->out('Table 1?');
		$table1 = $this->in();
		$this->out('Table 2?');
		$table2 = $this->in();
*/

		$path = "/home/fastslack/Videos";
		$folders = JFolder::files($path, '.', true, true);

//print_r($folders);

		$count = count($folders);

		for ($i=0;$i<$count;$i++) {

			$srcFile = $folders[$i];

			$safefilename = JFile::makeSafe($srcFile);
			
			$ext =  JFile::getExt($srcFile);

			if ($ext == "avi") {

				$this->out("==========================================================");

				// Create our FFMPEG-PHP class
				$ffmpegObj = new ffmpeg_movie($srcFile);

//print_r($srcFile);

				if(!is_object($ffmpegObj)) {
				    return false;
				}				

				// Save our needed variables
				$srcWidth = $this->makeMultipleTwo($ffmpegObj->getFrameWidth());
				$srcHeight = $this->makeMultipleTwo($ffmpegObj->getFrameHeight());
				$srcFPS = $ffmpegObj->getFrameRate();
				$srcAB = intval($ffmpegObj->getAudioBitRate()/1000);
				$srcAR = $ffmpegObj->getAudioSampleRate();

				$fixedName = escapeshellarg($srcFile);
				$stripName = escapeshellarg(JFile::stripExt($srcFile).".webm");

				//exec("ffmpeg -i {$fixedName} -ar {$srcAR} -ab {$srcAB} -s {$srcWidth}x{$srcHeight} -vcodec libvpx -acodec libvorbis -f webm {$stripName}");

				exec("ffmpeg -i {$fixedName} -vcodec libvpx -acodec libvorbis -f webm {$stripName}");

				//echo "ffmpeg -i {$fixedName} -vcodec libvpx -acodec libvorbis -f webm {$stripName}\n\n--\n";

				//echo "INSERT INTO `mtw_videos` (`title`, `path`, `type`, `height`, `width`, `ar`, `ab`) VALUES ('{$safefilename}', '{$safefilename}', 'avi', '{$srcWidth}', '{$srcHeight}', '{$srcAR}', '{$srcAB}');\n--\n";

				// Insert the video data to database
				$query = "INSERT INTO `mtw_videos` (`title`, `path`, `type`, `height`, `width`, `ar`, `ab`) VALUES ('{$safefilename}', '{$safefilename}', 'avi', '{$srcWidth}', '{$srcHeight}', '{$srcAR}', '{$srcAB}')";
				$this->dbo->setQuery($query);
				$this->dbo->query();


			}
		}
  } // end function

	function makeMultipleTwo ($value){
		$sType = gettype($value/2);

		if($sType == "integer") {
			return $value;
		} else {
			return ($value-1);
		}
	}

} // end class
 
JCli::getInstance( 'ConvertVideo' )->execute( );
